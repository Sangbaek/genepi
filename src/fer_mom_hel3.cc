#include"genepi.h"

/*
 This function generates the Fermi distribution of the nucleon in the helium 
 nucleus, based on the spectral function derived in Ref. [1] for the two-body 
 breakup, valid up to 430 MeV/c. The function returns the initial momentum of 
 the nucleon in GeV/c. 
 [1] R. Schiavilla, V.R. Pandharipande and R.B. Wiringa,
  Nucl. Phys. A 449 (1986) 219 
*/
double fer_mom_hel3(double rndm)
{
  int    i(1);
  double u1;
  double sfp_lg, sfp_li, slo_lg, slo_li;
  double impp, impo, imp(0.0);

  //Fermi distribution Urbana VII potential (limited to 430 MeV/c)
  double spro[216]={0.,0.00002923515952,0.0002334594114,0.0007854165059,
    0.001853301777,0.003598623338,0.006174262882,0.00972274763,0.0143747419,
    0.02024776382,0.02744512991,0.0360551278,0.04615041483,0.05778763806,
    0.07100726927,0.08583364655,0.1022752124,0.120324937,0.139960913,
    0.1611471087,0.1838342643,0.2079609141,0.2334545202,0.2602326992,
    0.2882045244,0.3172718875,0.3473309013,0.3782733262,0.4099880053,
    0.4423622891,0.4752834384,0.5086399871,0.5423351993,0.5763658109,
    0.610659043,0.6451225989,0.6796665632,0.7142039589,0.7486512646,
    0.7829288885,0.8169615992,0.8506789105,0.8840154207,0.9169111047,
    0.9493115608,0.9811682101,1.012438451,1.043085769,1.07310442,
    1.102558113,1.131435399,1.159719921,1.187397971,1.214458353,1.24089225,
    1.266693086,1.291856386,1.316379645,1.340262182,1.363505012,1.386110708,
    1.408083274,1.429428015,1.450151415,1.470260746,1.489764048,1.508670658,
    1.526990663,1.544734789,1.561914299,1.578540902,1.594626663,1.610183923,
    1.625225213,1.639763187,1.65381055,1.667379993,1.680484135,1.693135465,
    1.705346256,1.717119196,1.728459233,1.739378722,1.749890075,1.760005715,
    1.769738036,1.779099367,1.788101934,1.796757832,1.805078992,1.813077154,
    1.820763846,1.828150359,1.835247727,1.842066714,1.848617693,1.85490914,
    1.860950376,1.866751092,1.8723207,1.877668323,1.882802788,1.887732621,
    1.892466041,1.897010955,1.901374957,1.905565326,1.909589025,1.913452703,
    1.917162692,1.920725017,1.924144486,1.92742109,1.930559351,1.933564605,
    1.936442053,1.939196756,1.941833637,1.944357471,1.946772891,1.949084382,
    1.951296284,1.953412788,1.95543794,1.957375637,1.959229633,1.961003537,
    1.96270059,1.964323508,1.965875494,1.967359675,1.96877906,1.970136541,
    1.971434898,1.972676796,1.973864788,1.975001321,1.976088731,1.977129251,
    1.978125012,1.979078043,1.979990276,1.980863546,1.981699308,1.982498848,
    1.983263776,1.983995633,1.984695893,1.985365959,1.986007172,1.986620806,
    1.987208075,1.987770132,1.988308072,1.988822932,1.989315697,1.989787298,
    1.990238615,1.990670471,1.991083034,1.99147672,1.991852308,1.992210552,
    1.99255219,1.992877935,1.993188481,1.993484499,1.99376664,1.994035535,
    1.994291794,1.994536004,1.994768736,1.994990538,1.995201938,1.995403452,
    1.995595621,1.995778927,1.995953817,1.996120717,1.996280034,1.996432159,
    1.996577462,1.9967163,1.99684901,1.996975915,1.997097324,1.997213529,
    1.997324809,1.99743143,1.997533645,1.997631691,1.997725794,1.997816177,
    1.997903056,1.997986636,1.998067112,1.998144667,1.998219475,1.9982917,
    1.998361496,1.998429006,1.998494365,1.998557701,1.998619129,1.998678757,
    1.998736685,1.998792958,1.998847554,1.998900553,1.998952035,1.999002075,
    1.999050746,1.999098116,1.999144251,1.999189214,1.999233063};

// Fermi distributions parameters
   double star = 1.00000E-03;
   double slop = 2.00000E-03;
   double stva = 1.82858E-06;

// Bounded random probability 
  u1 = rndm*spro[214];
  if(u1 <= spro[0])
  {
    imp = 0.0;
    return imp;
  }
// Linear interpolation up to the threshold value corresponding to p = 1 MeV/c
  else if(u1<=stva)
  {
    imp = star*u1/stva;
    return imp;
  }

  while(u1 >= spro[i])
  {
    i++;
  }

// Specific case between threshold and second array element
  if(i == 1)
  {      
    slo_lg = log(spro[i]) - log(stva);
    sfp_lg = log(u1)      - log(stva);
    slo_li = spro[i]      - stva;
    sfp_li = u1           - stva;
    impp   = slop         - star;
    impo   = star;
  }
  //General case
  else
  {
    slo_lg = log(spro[i]) - log(spro[i-1]);
    sfp_lg = log(u1)      - log(spro[i-1]);
    slo_li = spro[i]      - spro[i-1];
    sfp_li = u1           - spro[i-1];
    impp   = slop;
    impo   = (i-1)*slop;
  }

// Helium momentum from an average between logarithmic and linear interpolations
// This average reduces edge effects in the obtained distribution
  imp = impo + impp*(sfp_lg/slo_lg + sfp_li/slo_li)/2.;

  return imp;
}
